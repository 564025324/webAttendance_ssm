<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lijwen.dao.StaffPositionMapper" >
  <resultMap id="BaseResultMap" type="com.lijwen.po.StaffPosition" >
    <constructor >
      <idArg column="staffPositionId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="positionid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="departmentId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    staffPositionId, positionid, departmentId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from staffposition
    where staffPositionId = #{staffpositionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staffposition
    where staffPositionId = #{staffpositionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lijwen.po.StaffPosition" >
    <selectKey resultType="java.lang.Integer" keyProperty="staffpositionid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into staffposition (positionid, departmentId)
    values (#{positionid,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lijwen.po.StaffPosition" >
    <selectKey resultType="java.lang.Integer" keyProperty="staffpositionid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into staffposition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="positionid != null" >
        positionid,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="positionid != null" >
        #{positionid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijwen.po.StaffPosition" >
    update staffposition
    <set >
      <if test="positionid != null" >
        positionid = #{positionid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
    </set>
    where staffPositionId = #{staffpositionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijwen.po.StaffPosition" >
    update staffposition
    set positionid = #{positionid,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER}
    where staffPositionId = #{staffpositionid,jdbcType=INTEGER}
  </update>
  
    <!-- 新增的 -->
  <!-- 查询部门职务 -->
  <select id="selectBydepartmentId" resultType="com.lijwen.po.StaffPosition" parameterType="java.lang.Integer" >
      SELECT    staffPosition.positionid, attributeGatherChild.Name as 'position.name', staffPosition.staffPositionId, staffPosition.departmentId, 
                 department.name AS 'department.name', department.number as 'department.number'
      FROM       staffPosition INNER JOIN
                 attributeGatherChild ON staffPosition.positionid = attributeGatherChild.attributeGatherChildId INNER JOIN
                 department ON staffPosition.departmentId = department.departmentId
				 where staffPosition.departmentId=#{departmentid,jdbcType=INTEGER}
  </select>
  
   <!-- 查询子部门职务 -->
    <select id="selectBydepartmentIds" resultType="com.lijwen.po.StaffPosition" >
    SELECT    DISTINCT(staffPosition.positionid),attributeGatherChild.Name AS 'position.name'
    FROM       staffPosition INNER JOIN
                 attributeGatherChild ON staffPosition.positionid = attributeGatherChild.attributeGatherChildId
                 where staffPosition.departmentId in
                 <foreach collection="departmentids" item="item" open="(" separator=","  close=")" >
                 #{item}
                 </foreach>
   </select>
  
 <!--  根据机构id查询机构名称编号和职务 -->
 
  <select id="selectByids" resultType="com.lijwen.po.StaffPosition" >
      SELECT    staffPosition.staffPositionId, department.number AS 'department.number', department.name AS 'department.name', staffPosition.positionid, 
                 attributeGatherChild.Name AS 'position.name'
       FROM       department INNER JOIN
                 staffPosition ON department.departmentId = staffPosition.departmentId INNER JOIN
                 attributeGatherChild ON staffPosition.positionid = attributeGatherChild.attributeGatherChildId
                 where staffPosition.departmentId in
                 <foreach collection="ids" item="item" open="(" separator=","  close=")" >
                 #{item}
                 </foreach>
                 ORDER BY   department.departmentId
   </select>
</mapper>