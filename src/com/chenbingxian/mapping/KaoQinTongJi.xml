<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenbingxian.dao.KaoQinTongJiDao">

	<!--查询员工出差请假统计的时间-->
	<select id="selectChuChaQingJia" resultType="com.chenbingxian.vo.ChuChaQingJiaTongJi">
	CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table4 (
		 staffID INT,
		 starDate DATETIME,
		 endDate DATETIME,
		 ignoreValue INT,
		 wayId INT,
		 resultId INT,
		 attendanceClassChildId INT,
		 attendanceCTypeId INT,
		 chuchajisuanfou TINYINT
		)
		; 
		
	INSERT INTO tmp_table4(staffID,
		 starDate,
		 endDate,
		 ignoreValue,
		 wayId,
		 resultId,
		 attendanceClassChildId,
		 attendanceCTypeId,
		 chuchajisuanfou)	
        SELECT  operationStaffId,IF(startDate>#{starDate},startDate,#{starDate})AS 'starDate',
                 IF(endDate>#{endDate},#{endDate},endDate)AS 'endDate',
                       attendanceClassChild.ignoreValue, attendanceClassChild.wayId,
                       attendanceClassChild.resultId,attendanceClassChildId,attendanceCTypeId,workNo
      FROM       askForLeave INNER JOIN
            attendanceClassChild ON askForLeave.registrationTypeId = attendanceClassChild.attendanceClassChildId
     
      WHERE attendanceCTypeId IN(12,13) AND 
      <if test="staffids.length>0">
		    operationStaffId
			in(
			<foreach collection="staffids" item="item" separator=",">
				#{item}
			</foreach>
			)
			and 
		</if>
      
       checkTypeId=31 AND  (startDate BETWEEN #{starDate} AND #{endDate} OR endDate BETWEEN #{starDate} AND #{endDate} OR (startDate &lt;#{starDate} AND endDate>#{endDate}))
          ;       
      SELECT staffID,attendanceClassChildId,chuchajisuanfou,(CASE WHEN resultId=16 THEN IF(wayId=20,<!-- #判断处理结果是否为天处理方式是否为四舍五入 -->
      IF(ignoreValue=0,ROUND(SUM(kaoqinshijian)/1440,0),
      IF(ignoreValue=1,ROUND(SUM(kaoqinshijian)/1440,1),ROUND(SUM(kaoqinshijian)/1440,2))), 
      IF(ignoreValue=0,FORMAT(SUM(kaoqinshijian)/1440,0),IF(ignoreValue=1,FORMAT(SUM(kaoqinshijian)/1440,1),
      FORMAT(SUM(kaoqinshijian)/1440,2)))  
       )  
      ELSE  
      IF(wayId=20,<!-- #判断处理结果是否为天处理方式是否为四舍五入 -->
      IF(ignoreValue=0,ROUND(SUM(kaoqinshijian)/60,0),
      IF(ignoreValue=1,ROUND(SUM(kaoqinshijian)/60,1),ROUND(SUM(kaoqinshijian)/60,2))), 
      IF(ignoreValue=0,FORMAT(SUM(kaoqinshijian)/60,0),IF(ignoreValue=1,FORMAT(SUM(kaoqinshijian)/60,1),
      FORMAT(SUM(kaoqinshijian)/60,2))) )
             END ) 
       AS 'shichang'
      ,IF(attendanceCTypeId=13 AND chuchajisuanfou=1,ROUND(SUM(kaoqinshijian)/60,2),0.00)AS 'chuchajichuqinshijian' 
       FROM (  
       SELECT staffID,
		attendanceClassChildId,
		 attendanceCTypeId,
                chuchajisuanfou, 
                ignoreValue,
		 wayId,
		 resultId,ROUND(TIME_TO_SEC(TIMEDIFF(endDate,starDate))/60)AS'kaoqinshijian'
      FROM tmp_table4)AS tb
      GROUP BY staffID,attendanceClassChildId,chuchajisuanfou
      ;
      DROP TABLE IF EXISTS tmp_table4;
	</select>
	
	
	
	
	
	
       <!-- 查询员工出勤、加班、公休统计的时间 -->
    <select id="selectChuQingJiaBanGongXiuTongJi" resultType="com.chenbingxian.vo.ChuQinJiaBanGongXiuTongJiVo">
	CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table1(
	         staffID INT,
		 workDate DATE,
		 SignInTime DATETIME,
		 lateNo TINYINT, 
                 SignInNumber VARCHAR(20),
                 signBackTime DATETIME, 
                 leaveEarlyNo TINYINT,
                 signBackNumber VARCHAR(20),
                 dealWithName VARCHAR(20), 
                 goToWorkTime DATETIME,
                 timeFromWork DATETIME,
                 goToWorkChargeNo TINYINT,
                 timeFromWorkChargeNo TINYINT, 
                 attendanceClassChildId INT,
                 classesName  VARCHAR(20),
                 classTypeId INT ,
                 classTypeName  VARCHAR(20), 
                 lateAndLeaveEarlyNo TINYINT,
                 overtime INT ,
                 earlyWorkToOvertimeNo TINYINT, 
                 lateWorkToOvertiemNo TINYINT, 
                goOutAttendanceNo TINYINT,
                overtimeForOver INT, 
                 fullDateTime INT ,
                 attendanceCTypeId INT,
                 staffClassesRecordId INT,
                 BanduanattendanceCTypeId INT
                 )
		;
 CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table2 (
                 staffID INT,
		 chidaoshijian INT,
		 tqjiabanshijian INT,
		 yichangjilu INT,
		 gongzuoshichang INT,
		 workDate DATE,
		 SignInTime DATETIME,
		 lateNo TINYINT, 
                 SignInNumber VARCHAR(20),
                 signBackTime DATETIME, 
                 leaveEarlyNo TINYINT,
                 signBackNumber VARCHAR(20),
                 dealWithName VARCHAR(20), 
                 goToWorkTime DATETIME,
                 timeFromWork DATETIME,
                 goToWorkChargeNo TINYINT,
                 timeFromWorkChargeNo TINYINT, 
                 attendanceClassChildId INT,
                 classesName  VARCHAR(20),
                 classTypeId INT ,
                 classTypeName  VARCHAR(20), 
                 lateAndLeaveEarlyNo TINYINT,
                 overtime INT ,
                 earlyWorkToOvertimeNo TINYINT, 
                 lateWorkToOvertiemNo TINYINT, 
                goOutAttendanceNo TINYINT,
                overtimeForOver INT, 
                 fullDateTime INT ,
                 attendanceCTypeId INT,
                 staffClassesRecordId INT,
                 BanduanattendanceCTypeId INT )
		; 
		 CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table3 (
		 员工id INT,
		 各考勤类别时间 INT,
		 应出勤时间 INT,
		 迟到次数 INT,
		 早退次数 INT,
		 异常记录次数 INT,
		 考勤类别明细id INT,
		 考勤类别id INT
		)
		; 

	
    INSERT INTO tmp_table1 (staffID,workDate,SignInTime,lateNo, 
                 SignInNumber,signBackTime, 
                 leaveEarlyNo,signBackNumber,dealWithName, 
                 goToWorkTime,timeFromWork,goToWorkChargeNo,timeFromWorkChargeNo, 
                 attendanceClassChildId,classesName,classTypeId,classTypeName, 
                 lateAndLeaveEarlyNo,overtime,earlyWorkToOvertimeNo, 
                 lateWorkToOvertiemNo,goOutAttendanceNo,overtimeForOver, 
                 fullDateTime,attendanceCTypeId,staffClassesRecordId,BanduanattendanceCTypeId)
                 
                 SELECT
                 staffClassesRecord.staffId,
                 staffClassesRecord.workDate, staffClassPeriodSignInRecord.SignInTime, staffClassPeriodSignInRecord.lateNo, 
                 staffClassPeriodSignInRecord.SignInNumber, staffClassPeriodSignInRecord.signBackTime, 
                 staffClassPeriodSignInRecord.leaveEarlyNo, staffClassPeriodSignInRecord.signBackNumber, attendanceClassChild.dealWithName, 
                 CONCAT(workDate,' ',goToWorkTime)  AS 'goToWorkTime', (CASE WHEN ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime)))&lt;0
                 THEN CONCAT(DATE_ADD(workDate,INTERVAL 1 DAY),' ',timeFromWork) 
                   
                  ELSE CONCAT(workDate,' ',timeFromWork) END )AS timeFromWork, classPeriod.goToWorkChargeNo, classPeriod.timeFromWorkChargeNo, 
                 staffClassPeriodSignInRecord.attendanceClassChildId, positionClasses.classesName, positionClasses.classTypeId, attributeGatherChild.Name AS 'classTypeName', 
                 lateandleaveearlysystem.lateAndLeaveEarlyNo, overtimeSystem.overtime, overtimeSystem.earlyWorkToOvertimeNo, 
                 overtimeSystem.lateWorkToOvertiemNo, otherStystem.goOutAttendanceNo, notClassesSystem.overtimeForOver, 
                 notClassesSystem.fullDateTime,attendanceClassChild.attendanceCTypeId,staffClassesRecord.staffClassesRecordId
                , 
                 attendanceClassChild_1.attendanceCTypeId AS 'BanduanattendanceCTypeId'
                 FROM       staffClassPeriodSignInRecord INNER JOIN
                 staffClassesRecord ON staffClassPeriodSignInRecord.staffClassesRecordId = staffClassesRecord.staffClassesRecordId INNER JOIN
                 attendanceClassChild ON 
                 staffClassPeriodSignInRecord.attendanceClassChildId = attendanceClassChild.attendanceClassChildId INNER JOIN
                 classPeriod ON staffClassPeriodSignInRecord.classPeriodId = classPeriod.classPeriodId INNER JOIN
                 positionClasses ON classPeriod.positionClassesId = positionClasses.positionClassesId INNER JOIN
                 attributeGatherChild ON positionClasses.classTypeId = attributeGatherChild.attributeGatherChildId INNER JOIN
                 lateandleaveearlysystem ON 
                 staffClassesRecord.lateAndLeaveEarlySystemId = lateandleaveearlysystem.lateAndLeaveEarlySystemId INNER JOIN
                 otherStystem ON staffClassesRecord.otherStystemId = otherStystem.otherStystemId INNER JOIN
                 overtimeSystem ON staffClassesRecord.overtimeSystemId = overtimeSystem.overtimeSystemId INNER JOIN
                 goOutSystem ON staffClassesRecord.goOutSystemId = goOutSystem.goOutSystemId INNER JOIN
                 notClassesSystem ON staffClassesRecord.notClassesSystemId = notClassesSystem.notClassesSystemId INNER JOIN
                 attendanceClassChild AS attendanceClassChild_1 ON 
                 classPeriod.attendanceClassChildId = attendanceClassChild_1.attendanceClassChildId  
             
                 
                 WHERE  attendanceClassChild.attendanceCTypeId IN(9,10,11,15) AND workDate BETWEEN #{starDate} AND #{endDate}   
                <if test="staffids.length>0">
		         and staffClassesRecord.staffId
			     in(
			    <foreach collection="staffids" item="item" separator=",">
				#{item}
			   </foreach>
			)
		</if>
                 ;
                 
                 
                 
 INSERT INTO tmp_table2	                              
 SELECT 
<!--  #1 -->
  staffID, (CASE   
 WHEN lateNo=1 AND leaveEarlyNo=1 AND lateAndLeaveEarlyNo=1 <!-- #判断是否迟到和早退和下班时间是否大于上班时间 -->
 THEN ROUND(TIME_TO_SEC(TIMEDIFF(SignInTime,goToWorkTime))/60)<!-- #上班迟到时间 -->
 +ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60)<!-- #下班早退时间 -->
 
  WHEN  lateNo=1  AND lateAndLeaveEarlyNo=1 <!-- #判断是否迟到 -->
  THEN   ROUND(TIME_TO_SEC(TIMEDIFF(SignInTime,goToWorkTime))/60)<!-- #上班迟到时间 #上班迟到时间 -->
   
  WHEN leaveEarlyNo=1 AND lateAndLeaveEarlyNo=1 <!-- #判断是否早退和下班时间是否大于上班时间 -->
  THEN ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60)
  
  ELSE 0
 
  END )AS '迟到早退时间' <!-- #（计入出勤时间） -->
 , 
<!--  #2 -->
 (CASE 
 
  WHEN  attendanceCTypeId=9  AND earlyWorkToOvertimeNo=1 AND lateWorkToOvertiemNo=1 <!-- #判断考勤类别是否属于出勤类别和提前上班计加班和延迟下班计加班 -->
  THEN IF(
  (
  IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)<!-- #if判断签到时间是否小于上班时间，小于就计算提前上班时间，大于就为0 -->
  +IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0) 
  )>overtime,
  (IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)+IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0)
  ),0
  )
   
  
  WHEN  attendanceCTypeId=9  AND earlyWorkToOvertimeNo=0 AND lateWorkToOvertiemNo=1 <!-- #判断考勤类别是否属于出勤类别和延迟下班计加班 -->
  THEN IF(IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0)>overtime
  ,IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0)
  ,0
  )  
  
  WHEN  attendanceCTypeId=9  AND earlyWorkToOvertimeNo=1 AND lateWorkToOvertiemNo=0 <!-- #判断考勤类别是否属于出勤类别和延迟下班计加班 -->
  THEN IF(IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)>overtime <!-- #if判断签到时间是否小于上班时间，小于就计算提前上班时间，大于就为0  -->
  ,IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)
  ,0
  )  
  
   
  
  WHEN  attendanceCTypeId=10  AND earlyWorkToOvertimeNo=1 AND lateWorkToOvertiemNo=1 <!-- #判断考勤类别是否属于加班类别和提前上班计加班和延迟下班计加班 -->
  THEN IF(
   (IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)<!-- #if判断签到时间是否小于上班时间，小于就计算提前上班时间，大于就为0 -->
  +IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0))  
  >overtime,(IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)+IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0)) 
 ,0 )
  WHEN  attendanceCTypeId=10  AND earlyWorkToOvertimeNo=0 AND lateWorkToOvertiemNo=1 <!-- #判断考勤类别是否属于加班类别和延迟下班计加班 -->
  THEN IF(IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0) >overtime
  ,IF(timeFromWork&lt;signBackTime,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,signBackTime))/60),0)
  ,0
  ) 
  
  WHEN  attendanceCTypeId=10  AND earlyWorkToOvertimeNo=1 AND lateWorkToOvertiemNo=0 <!-- #判断考勤类别是否属于加班类别和延迟下班计加班 -->
  THEN IF(IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)>overtime <!-- #if判断签到时间是否小于上班时间，小于就计算提前上班时间，大于就为0  -->
  ,IF(SignInTime&lt;goToWorkTime,ROUND(TIME_TO_SEC(TIMEDIFF(goToWorkTime,SignInTime))/60),0)
  ,0
  ) 
  ELSE 0
  END) AS '提前上下班计加班时间',<!-- #提早上班、延迟下班之和超过多少分钟计加班的时间 -->
   IF(timeFromWork&lt;now() and (attendanceCTypeId=9 OR attendanceCTypeId=10),<!-- #判断班段是否为出勤类别或加班类别 -->
   IF((signBackTime IS NULL AND SignInTime IS NULL AND classTypeId=8),0,
   (IF((goToWorkChargeNo=1 AND SignInTime IS NULL),
   1,
   IF((timeFromWorkChargeNo=1 AND signBackTime IS NULL),1,
   0)))
   )
  ,
   0)AS '异常签到未处理班段记录数',(CASE WHEN attendanceCTypeId =9 OR attendanceCTypeId =10 <!-- #判断班段是否为出勤类别或加班类别 -->
    THEN  IF( (goToWorkChargeNo=1 AND timeFromWorkChargeNo=1),
    IF(ROUND(TIME_TO_SEC(TIMEDIFF(signBackTime,SignInTime))/60)IS NULL,0,ROUND(TIME_TO_SEC(TIMEDIFF(signBackTime,SignInTime))/60) )
    ,IF(goToWorkChargeNo=0 AND timeFromWorkChargeNo=1,IF(ROUND(TIME_TO_SEC(TIMEDIFF(signBackTime,goToWorkTime))/60)IS NULL,0,ROUND(TIME_TO_SEC(TIMEDIFF(signBackTime,goToWorkTime))/60)),
    IF(goToWorkChargeNo=1 AND timeFromWorkChargeNo=0,IF(ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,SignInTime))/60)IS NULL,0,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,SignInTime))/60)),
    IF(goToWorkChargeNo=0 AND timeFromWorkChargeNo=0,IF(ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60)IS NULL,0,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60)),
    0)
    )
    )
    )
    ELSE <!-- #其他考勤类别直接是下班时间减去上班时间 -->
    if(ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60) is null,0,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60))  
    END )
   
  AS '工作总时间（分钟）',<!-- #如果迟到早退时间不计为出勤时间就将工作时间减去提前上下班时间得到出勤时间，如果迟到早退时间计为出勤时间那么工作时间加上迟到早退时间再减去提前上下班时间得到出勤时间 -->
   
    workDate,  SignInTime,IF(lateNo IS NULL,0,lateNo) AS lateNo, 
                 SignInNumber, signBackTime, 
                 IF(leaveEarlyNo IS NULL,0,leaveEarlyNo)AS leaveEarlyNo, signBackNumber,dealWithName, 
                 goToWorkTime, timeFromWork,goToWorkChargeNo, timeFromWorkChargeNo, 
                attendanceClassChildId,classesName, classTypeId, classTypeName, 
                 lateAndLeaveEarlyNo, overtime, earlyWorkToOvertimeNo, 
                 lateWorkToOvertiemNo, goOutAttendanceNo, overtimeForOver, 
                 fullDateTime,attendanceCTypeId,staffClassesRecordId,BanduanattendanceCTypeId
FROM   tmp_table1;


 
<!-- #新增正常班次实际出勤时间到临时表 -->
INSERT INTO tmp_table3( 
                  员工id,
                 各考勤类别时间,
		 应出勤时间,
		 迟到次数,
		 早退次数,
		 异常记录次数,
		 考勤类别明细id,
		 考勤类别id)
SELECT staffID, IF(lateAndLeaveEarlyNo=1 AND gongzuoshichang>0 AND attendanceCTypeId=10,(gongzuoshichang+chidaoshijian),<!-- #计算普通出勤时间（缺勤类别为0） -->
IF(lateAndLeaveEarlyNo=0 AND gongzuoshichang>0 AND attendanceCTypeId=10,gongzuoshichang,IF(lateAndLeaveEarlyNo=1 AND gongzuoshichang>0 AND attendanceCTypeId=9
,(gongzuoshichang+chidaoshijian-tqjiabanshijian),IF(lateAndLeaveEarlyNo=0 AND gongzuoshichang>0 AND attendanceCTypeId=9,(gongzuoshichang-tqjiabanshijian),gongzuoshichang)
))
)AS '实际出勤时间',<!-- #各考勤类别实际出勤时间 -->
  IF(BanduanattendanceCTypeId!=11,IF(ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60)IS NULL,
  0,ROUND(TIME_TO_SEC(TIMEDIFF(timeFromWork,goToWorkTime))/60)),0)  
  AS '正常班次应出勤时间',
  lateNo'迟到次数' <!-- #迟到次数包含了缺勤的迟到数 -->
 ,leaveEarlyNo AS '早退次数',yichangjilu AS '异常记录次数',
 attendanceClassChildId AS '考勤类别明细id',
 attendanceCTypeId AS '考勤类别id'
FROM tmp_table2

WHERE (classTypeId=7) 
;
<!-- #新增出勤类别中超出时间计平时加班的信息到临时表 -->
INSERT INTO tmp_table3(
		员工id,
                 各考勤类别时间,
		 应出勤时间,
		 迟到次数,
		 早退次数,
		 异常记录次数,
		 考勤类别明细id,
		 考勤类别id
		)
SELECT staffID, tqjiabanshijian  AS '实际出勤时间',<!-- #各考勤类别实际出勤时间 -->
  0 AS '正常班次应出勤时间',
  0'迟到次数' <!-- #迟到次数包含了缺勤的迟到数 -->
 ,0 AS '早退次数',0 AS '异常记录次数',
 9 AS '考勤类别明细id',
 10 AS '考勤类别id'
FROM tmp_table2
WHERE classTypeId=7 AND attendanceCTypeId=9 AND tqjiabanshijian>0
;
<!-- #删除处理后的数据 -->
 DELETE  FROM tmp_table2

  WHERE (classTypeId=7)  
  ;
<!--   #新增不定时班次实际出勤时间到临时表(出勤、加班) -->
   INSERT INTO tmp_table3( 
                  员工id,
                 各考勤类别时间,
		 应出勤时间,
		 迟到次数,
		 早退次数,
		 异常记录次数,
		 考勤类别明细id,
		 考勤类别id)
	 SELECT staffID, IF(attendanceCTypeId=10,SUM(gongzuoshichang),IF(
	 SUM(gongzuoshichang)-fullDateTime>overtimeForOver,fullDateTime 
	<!--  #判断是无班次考勤的类别是否为加班类别，
	 #如果是工作时间全为实际出勤时间，如果不是判断工作时间是否超过了规定的加班时间，超过了就计fullDateTime,剩下的计平时加班 -->
	 ,gongzuoshichang))AS '实际出勤时间' 
	,fullDateTime AS '应出勤时间'
	,0 AS'迟到次数'<!--  #迟到次数包含了缺勤的迟到数 -->
	,0 AS '早退次数',SUM(yichangjilu) AS '异常记录次数',
	attendanceClassChildId AS '考勤类别明细id',
	attendanceCTypeId AS '考勤类别id'
       
	FROM tmp_table2
	WHERE attendanceCTypeId=9 OR attendanceCTypeId=10
	GROUP BY staffClassesRecordId;
       
<!--    #新增无班次考勤的缺勤时间(出勤、加班) -->
   INSERT INTO tmp_table3( 
                  员工id,
                 各考勤类别时间,
		 应出勤时间,
		 迟到次数,
		 早退次数,
		 异常记录次数,
		 考勤类别明细id,
		 考勤类别id)
	SELECT tb1.* FROM(
	SELECT staffID,IF((fullDateTime-SUM(gongzuoshichang))>=0,(fullDateTime-SUM(gongzuoshichang)),0)AS '缺勤时间'
	,0 AS '应出勤时间'
	,0 AS'迟到次数' <!-- #迟到次数包含了缺勤的迟到数 -->
	,0 AS '早退次数',0 AS '异常记录次数',
	13 AS '考勤类别明细id',
	15 AS '考勤类别id'
     
	FROM tmp_table2
	WHERE attendanceCTypeId=9 OR attendanceCTypeId=10
	GROUP BY staffClassesRecordId
	) AS tb1
	WHERE tb1.缺勤时间>0;
<!--      #新增无班次考勤的平时加班时间(出勤) -->
     INSERT INTO tmp_table3( 
                 员工id,
                 各考勤类别时间,
		 应出勤时间,
		 迟到次数,
		 早退次数,
		 异常记录次数,
		 考勤类别明细id,
		 考勤类别id)
	SELECT tb1.* FROM(
	SELECT staffID, IF(SUM(gongzuoshichang)-fullDateTime>overtimeForOver,
	SUM(gongzuoshichang)-fullDateTime,0)AS '平时加班'
	,0 AS '应出勤时间'
	,0 AS'迟到次数' <!-- #迟到次数包含了缺勤的迟到数 -->
	,0 AS '早退次数',0 AS '异常记录次数',
	9 AS '考勤类别明细id',
	10 AS '考勤类别id'
	FROM tmp_table2
	WHERE attendanceCTypeId=9
	GROUP BY staffClassesRecordId
	) AS tb1
	WHERE tb1.平时加班>0
	;
  
   SELECT  GROUP_CONCAT(员工id,'-',考勤类别明细id,'-',考勤类别id,'-',考勤类别总时间) AS 'leibiekaoqinxinxi'  ,SUM(应出勤时间)AS 'yinchuqinshijian' ,SUM(迟到次数) AS 'chidaocishu',
   SUM(早退次数) AS 'zaotuicishu' ,SUM(异常记录次数) AS 'yichangcishu',员工id as 'staffid'  FROM
    (
      SELECT 员工id,(CASE WHEN resultId=16 THEN IF(wayId=20,<!-- #判断处理结果是否为天处理方式是否为四舍五入 -->
      IF(ignoreValue=0,ROUND(SUM(各考勤类别时间)/1440,0),
      IF(ignoreValue=1,ROUND(SUM(各考勤类别时间)/1440,1),ROUND(SUM(各考勤类别时间)/1440,2))), 
      IF(ignoreValue=0,FORMAT(SUM(各考勤类别时间)/1440,0),IF(ignoreValue=1,FORMAT(SUM(各考勤类别时间)/1440,1),
      FORMAT(SUM(各考勤类别时间)/1440,2)))  
       )  
      ELSE  
      IF(wayId=20,<!-- #判断处理结果是否为天处理方式是否为四舍五入 -->
      IF(ignoreValue=0,ROUND(SUM(各考勤类别时间)/60,0),
      IF(ignoreValue=1,ROUND(SUM(各考勤类别时间)/60,1),ROUND(SUM(各考勤类别时间)/60,2))), 
      IF(ignoreValue=0,FORMAT(SUM(各考勤类别时间)/60,0),IF(ignoreValue=1,FORMAT(SUM(各考勤类别时间)/60,1),
      FORMAT(SUM(各考勤类别时间)/60,2))) )
      
       END ) AS '考勤类别总时间',(ROUND(SUM(应出勤时间)/60,2))
       AS '应出勤时间',SUM(迟到次数)AS 迟到次数,SUM(早退次数)AS 早退次数,SUM(异常记录次数)AS 异常记录次数 ,考勤类别明细id,考勤类别id
   
   FROM  tmp_table3 INNER JOIN
                 attendanceclasschild ON tmp_table3.考勤类别明细id=attendanceclasschild.attendanceClassChildId
   GROUP BY 员工id,考勤类别明细id
    )AS tn
   GROUP BY tn.员工id   
   ;

DROP TABLE IF EXISTS tmp_table1;	 		
DROP TABLE IF EXISTS tmp_table2;
DROP TABLE IF EXISTS tmp_table3;
 
	</select>
  
</mapper>