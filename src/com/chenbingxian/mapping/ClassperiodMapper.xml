<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenbingxian.dao.ClassperiodMapper">
	<resultMap id="BaseResultMap" type="com.chenbingxian.po.Classperiod">
		<constructor>
			<idArg column="classPeriodId" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="goToWorkTime" jdbcType="TIME" javaType="java.util.Date" />
			<arg column="timeFromWork" jdbcType="TIME" javaType="java.util.Date" />
			<arg column="startChargeTime" jdbcType="TIME" javaType="java.util.Date" />
			<arg column="endChargeTime" jdbcType="TIME" javaType="java.util.Date" />
			<arg column="goToWorkChargeNo" jdbcType="BIT" javaType="java.lang.Boolean" />
			<arg column="timeFromWorkChargeNo" jdbcType="BIT" javaType="java.lang.Boolean" />
			<arg column="calculateLeftEarlyNo" jdbcType="BIT" javaType="java.lang.Boolean" />
			<arg column="calculateAbsenceNo" jdbcType="BIT" javaType="java.lang.Boolean" />
			<arg column="positionClassesId" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="attendanceClassChildId" jdbcType="INTEGER" javaType="java.lang.Integer" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		classPeriodId, goToWorkTime, timeFromWork, startChargeTime, endChargeTime,
		goToWorkChargeNo,
		timeFromWorkChargeNo, calculateLeftEarlyNo, calculateAbsenceNo,
		positionClassesId, attendanceClassChildId
	</sql>
	<select id="selectByPrimaryKey" resultType="com.chenbingxian.po.Classperiod"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from classperiod
		where classPeriodId = #{classperiodid,jdbcType=INTEGER} and deleteNo=0
	</select>
	<!-- 删除已经完成 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update classperiod set deleteNo=1
		where classPeriodId = #{classperiodid,jdbcType=INTEGER};
	</delete>
	<insert id="insert" parameterType="com.chenbingxian.po.Classperiod">
		<selectKey resultType="java.lang.Integer" keyProperty="classperiodid"
		order="AFTER">
		SELECT LAST_INSERT_ID()
		</selectKey>
		insert into classperiod (goToWorkTime, timeFromWork, startChargeTime,
		endChargeTime, goToWorkChargeNo, timeFromWorkChargeNo,
		calculateLeftEarlyNo,
		calculateAbsenceNo, positionClassesId, attendanceClassChildId
		,deleteNo)
		values (#{gotoworktime,jdbcType=TIME}, #{timefromwork,jdbcType=TIME},
		#{startchargetime,jdbcType=TIME},
		#{endchargetime,jdbcType=TIME}, #{gotoworkchargeno,jdbcType=BIT},
		#{timefromworkchargeno,jdbcType=BIT},
		, #{calculateleftearlyno,jdbcType=BIT},
		#{calculateabsenceno,jdbcType=BIT},
		#{positionclassesid,jdbcType=INTEGER},
		#{attendanceclasschildid,jdbcType=INTEGER}
		,0)
	</insert>
	<insert id="insertSelective" parameterType="com.chenbingxian.po.Classperiod">
		<selectKey resultType="java.lang.Integer" keyProperty="classperiodid"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into classperiod
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="gotoworktime != null and gotoworktime!='' ">
				goToWorkTime,
			</if>
			<if test="timefromwork != null and timefromwork!='' ">
				timeFromWork,
			</if>
			<if test="startchargetime != null and startchargetime !=''">
				startChargeTime,
			</if>
			<if test="endchargetime != null and endchargetime!=''">
				endChargeTime,
			</if>
			<if test="gotoworkchargeno != null">
				goToWorkChargeNo,
			</if>
			<if test="timefromworkchargeno != null">
				timeFromWorkChargeNo,
			</if>

			<if test="calculateleftearlyno != null">
				calculateLeftEarlyNo,
			</if>
			<if test="calculateabsenceno != null">
				calculateAbsenceNo,
			</if>
			<if test="positionclassesid != null">
				positionClassesId,
			</if>
			<if test="attendanceclasschildid != null">
				attendanceClassChildId,
			</if>
			deleteNo,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="gotoworktime != null and gotoworktime!='' ">
				#{gotoworktime,jdbcType=TIME},
			</if>
			<if test="timefromwork != null and timefromwork!='' ">
				#{timefromwork,jdbcType=TIME},
			</if>
			<if test="startchargetime != null and startchargetime !=''">
				#{startchargetime,jdbcType=TIME},
			</if>
			<if test="endchargetime != null and endchargetime!=''">
				#{endchargetime,jdbcType=TIME},
			</if>
			<if test="gotoworkchargeno != null">
				#{gotoworkchargeno,jdbcType=BIT},
			</if>
			<if test="timefromworkchargeno != null">
				#{timefromworkchargeno,jdbcType=BIT},
			</if>
			<if test="calculateleftearlyno != null">
				#{calculateleftearlyno,jdbcType=BIT},
			</if>
			<if test="calculateabsenceno != null">
				#{calculateabsenceno,jdbcType=BIT},
			</if>
			<if test="positionclassesid != null">
				#{positionclassesid,jdbcType=INTEGER},
			</if>
			<if test="attendanceclasschildid != null">
				#{attendanceclasschildid,jdbcType=INTEGER},
			</if>
			0,
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.chenbingxian.po.Classperiod">
		update classperiod
		<set>
			<if test="gotoworktime != null">
				goToWorkTime = #{gotoworktime,jdbcType=TIME},
			</if>
			<if test="timefromwork != null">
				timeFromWork = #{timefromwork,jdbcType=TIME},
			</if>
			<if test="startchargetime != ''">
				startChargeTime = #{startchargetime,jdbcType=TIME},
			</if>
			<if test="endchargetime !=''">
				endChargeTime = #{endchargetime,jdbcType=TIME},
			</if>
			<if test="startchargetime == ''">
				startChargeTime =null,
			</if>
			<if test="endchargetime ==''">
				endChargeTime =null,
			</if>
			<if test="gotoworkchargeno != null">
				goToWorkChargeNo = #{gotoworkchargeno,jdbcType=BIT},
			</if>
			<if test="gotoworkchargeno == null">
				goToWorkChargeNo =0,
			</if>
			<if test="timefromworkchargeno != null">
				timeFromWorkChargeNo = #{timefromworkchargeno,jdbcType=BIT},
			</if>
			<if test="timefromworkchargeno == null">
				timeFromWorkChargeNo =0,
			</if>

			<if test="calculateleftearlyno != null">
				calculateLeftEarlyNo = #{calculateleftearlyno,jdbcType=BIT},
			</if>
			<if test="calculateleftearlyno == null">
				calculateLeftEarlyNo =0,
			</if>
			<if test="calculateabsenceno != null">
				calculateAbsenceNo = #{calculateabsenceno,jdbcType=BIT},
			</if>
			<if test="calculateabsenceno == null">
				calculateAbsenceNo =0,
			</if>
			<if test="positionclassesid != null">
				positionClassesId = #{positionclassesid,jdbcType=INTEGER},
			</if>
			<if test="attendanceclasschildid != null">
				attendanceClassChildId = #{attendanceclasschildid,jdbcType=INTEGER},
			</if>
		</set>
		where classPeriodId = #{classperiodid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chenbingxian.po.Classperiod">
		update classperiod
		set goToWorkTime = #{gotoworktime,jdbcType=TIME},
		timeFromWork = #{timefromwork,jdbcType=TIME},
		startChargeTime = #{startchargetime,jdbcType=TIME},
		endChargeTime = #{endchargetime,jdbcType=TIME},
		goToWorkChargeNo = #{gotoworkchargeno,jdbcType=BIT},
		timeFromWorkChargeNo = #{timefromworkchargeno,jdbcType=BIT},
		calculateLeftEarlyNo = #{calculateleftearlyno,jdbcType=BIT},
		calculateAbsenceNo = #{calculateabsenceno,jdbcType=BIT},
		positionClassesId = #{positionclassesid,jdbcType=INTEGER},
		attendanceClassChildId = #{attendanceclasschildid,jdbcType=INTEGER}
		where classPeriodId = #{classperiodid,jdbcType=INTEGER}
	</update>
	<!--根据班次id查询班段 -->
	<select id="selectClassperiod" resultType="com.chenbingxian.po.Classperiod"
		parameterType="java.lang.Integer">
		SELECT classPeriod.classPeriodId, classPeriod.goToWorkTime,
		classPeriod.timeFromWork, classPeriod.startChargeTime,
		classPeriod.endChargeTime, classPeriod.goToWorkChargeNo,
		classPeriod.timeFromWorkChargeNo, classPeriod.calculateLeftEarlyNo,
		classPeriod.calculateAbsenceNo, classPeriod.positionClassesId,
		classPeriod.attendanceClassChildId ,
		attendanceClassChild.dealWithName AS 'timeType.dealWithName',
		IF(goToWorkTime>timeFromWork,ROUND(TIME_TO_SEC(TIMEDIFF(
		CONCAT('2017-02-22',' ',timeFromWork),CONCAT('2017-02-21',' ',goToWorkTime)))/60),
		ROUND(TIME_TO_SEC(TIMEDIFF(
		CONCAT('2017-02-21',' ',timeFromWork),CONCAT('2017-02-21',' ',goToWorkTime)))/60))AS 'workTime'
		FROM classPeriod INNER JOIN
		attendanceClassChild ON classPeriod.attendanceClassChildId =
		attendanceClassChild.attendanceClassChildId
		where classPeriod.positionClassesId= #{Classid,jdbcType=INTEGER} and
		classPeriod.deleteNo=0
		order by goToWorkTime
	</select>
	
	 <!--  当班段改变时修改签到表大于今天的班段id -->
  <update id="updateSignrecordClassPeriodId">
     CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table5 (
	 SignInRecordId INT
		)
		;
	 INSERT INTO tmp_table5	
     SELECT
     staffclassperiodsigninrecord.staffClassPeriodSignInRecordId
          FROM
     webattendance.staffclassperiodsigninrecord
     INNER JOIN webattendance.staffclassesrecord 
        ON (staffclassperiodsigninrecord.staffClassesRecordId = staffclassesrecord.staffClassesRecordId)
        WHERE staffclassperiodsigninrecord.classPeriodId=#{one_classPeriodId} AND workDate>NOW();
        
        UPDATE staffclassperiodsigninrecord SET classPeriodId=#{tow_classPeriodId}
        WHERE staffClassPeriodSignInRecordId IN(SELECT SignInRecordId FROM tmp_table5);
      
         DROP TABLE IF EXISTS tmp_table5;
  </update>
    <!--当班段删除时删除大于今天的班段 -->
  <delete id="deleteByClassPeriodId" parameterType="java.lang.Integer" >
      CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table6 (
	 SignInRecordId INT
		)
		;
	 INSERT INTO tmp_table6
     SELECT
     staffclassperiodsigninrecord.staffClassPeriodSignInRecordId
          FROM
         webattendance.staffclassperiodsigninrecord
        INNER JOIN webattendance.staffclassesrecord 
        ON (staffclassperiodsigninrecord.staffClassesRecordId = staffclassesrecord.staffClassesRecordId)
        WHERE staffclassperiodsigninrecord.classPeriodId=#{classPeriodId} AND workDate>NOW();
        DELETE FROM staffclassperiodsigninrecord
        WHERE staffClassPeriodSignInRecordId IN(SELECT SignInRecordId FROM tmp_table6);
        DROP TABLE IF EXISTS tmp_table6;
  </delete>
   <!-- 当班段新增时新增签到表的班段 -->
   <insert id="insertByClassPeriodId"  >
     CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table7 (
	 attendanceClassChildId INT,
	 classPeriodId INT,
	 staffClassesRecordId INT
             )
		;
    INSERT INTO tmp_table7(attendanceClassChildId,classPeriodId,staffClassesRecordId) 
	 
    SELECT #{attendanceClassChildId},#{classPeriodId},
    staffclassperiodsigninrecord.staffClassesRecordId
    FROM
    webattendance.staffclassperiodsigninrecord
    INNER JOIN webattendance.staffclassesrecord 
        ON (staffclassperiodsigninrecord.staffClassesRecordId = staffclassesrecord.staffClassesRecordId)
    INNER JOIN webattendance.classperiod 
     ON (staffclassperiodsigninrecord.classPeriodId = classperiod.classPeriodId)
        
        WHERE workDate>NOW() AND positionClassesId=#{positionClassesId}
        GROUP BY staffclassperiodsigninrecord.staffClassesRecordId
        ;
         
        INSERT INTO staffclassperiodsigninrecord(attendanceClassChildId,classPeriodId,staffClassesRecordId) 
        SELECT attendanceClassChildId,classPeriodId,staffClassesRecordId FROM tmp_table7;
         
        DROP TABLE IF EXISTS tmp_table7;
  </insert>
	
	
</mapper>