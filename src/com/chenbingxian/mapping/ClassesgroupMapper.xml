<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenbingxian.dao.ClassesgroupMapper" >
  <resultMap id="BaseResultMap" type="com.chenbingxian.po.Classesgroup" >
    <constructor >
      <idArg column="classesGroupId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column=" positionClassesId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="groupId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    classesGroupId, positionClassesId, groupId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from classesgroup
    where classesGroupId = #{classesgroupid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from classesgroup
    where classesGroupId = #{classesgroupid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chenbingxian.po.Classesgroup" >
    <selectKey resultType="java.lang.Integer" keyProperty="classesgroupid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classesgroup (positionClassesId, groupId)
    values (#{positionclassesid,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chenbingxian.po.Classesgroup" >
    <selectKey resultType="java.lang.Integer" keyProperty="classesgroupid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into classesgroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="positionclassesid != null" >
        positionClassesId,
      </if>
      <if test="groupid != null" >
        groupId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="positionclassesid != null" >
        #{positionclassesid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chenbingxian.po.Classesgroup" >
    update classesgroup
    <set >
      <if test="positionclassesid != null" >
        positionClassesId= #{positionclassesid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        groupId = #{groupid,jdbcType=INTEGER},
      </if>
    </set>
    where classesGroupId = #{classesgroupid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chenbingxian.po.Classesgroup" >
    update classesgroup
    set positionClassesId = #{positionclassesid,jdbcType=INTEGER},
      groupId = #{groupid,jdbcType=INTEGER}
    where classesGroupId = #{classesgroupid,jdbcType=INTEGER}
  </update>
  
  <!-- 新增班组班次 -->
   <insert id="insertClassGroup">
    insert into classesgroup (positionClassesId, groupId)
    values
     <foreach collection="classIds" item="item" open="" separator=","  close="" >
                 (#{item},#{groupId})
            </foreach>
  </insert>
    <!-- 查询班组班次信息 -->
      <select id="selectClassesByGroupID" resultType="com.chenbingxian.po.Classesgroup" parameterType="java.lang.Integer" >
     SELECT    positionClasses.classesName AS 'positionclasses.classesName', positionClasses.classesNumber AS 'positionclasses.classesNumber', classesgroup.positionClassesId AS 'positionclassesid', classesgroup.groupId AS 'groupid',(SELECT GROUP_CONCAT(CONCAT(SUBSTRING(goToWorkTime, 1, 5),'--'), 
     SUBSTRING(timeFromWork,1,5) SEPARATOR ',') FROM (SELECT * FROM classperiod  
     ORDER BY startChargeTime)AS tb WHERE positionClassesId=positionClasses.positionClassesId
	)AS 'positionclasses.banduanxinxi'
    FROM       positionClasses INNER JOIN
                 classesgroup ON positionClasses.positionClassesId = classesgroup.positionClassesId
         WHERE classesgroup.groupId=#{groupid,jdbcType=INTEGER} AND positionClasses.deleteNo!=1
  </select>
  
  <!-- 编辑班组时修改班组班次信息 -->
   <update id="editClassesgroup"  >
    CREATE TEMPORARY TABLE  IF NOT EXISTS tmp_BCtable (
     BanCiId INT,
     BanZuId INT    
      );
   CREATE TEMPORARY TABLE  IF NOT EXISTS tmp_BZBCtable (
       classesGroupId INT,
       BanCiId INT
      );
       <if test="ClassIds.length>0">
        insert into tmp_BCtable (BanZuId,BanCiId) values 
       <foreach collection="ClassIds" item="item" open="" separator=","  close="" >
                (#{groupid,jdbcType=INTEGER},#{item})
            </foreach>
            ; 
       </if>
          insert into tmp_BZBCtable select  classesGroupId,positionClassesId from classesgroup
          where classesgroup.groupId=#{groupid,jdbcType=INTEGER}
          ;
         <!--删除班组班次 -->
        delete  from classesgroup where 
        classesGroupId in (
        select classesGroupId from tmp_BZBCtable 
         where not EXISTS(
        select * from tmp_BCtable 
        where tmp_BCtable.BanCiId=tmp_BZBCtable.BanCiId)
         )
         ;
      <!-- 新增班组班次 -->
      INSERT INTO classesgroup (positionClassesId,groupId)
      SELECT BanCiId,
       BanZuId   FROM
       tmp_BCtable 
        WHERE NOT EXISTS(
        SELECT * FROM tmp_BZBCtable 
        WHERE tmp_BZBCtable.BanCiId=tmp_BCtable.BanCiId
        )
      ;
   DROP TABLE IF EXISTS tmp_BCtable;
   DROP TABLE IF EXISTS tmp_BZBCtable;
  </update>
    <!-- 删除班组信息 -->
    <delete id="deleteGroupClass" parameterType="java.lang.Integer" >
    update  attributegatherchild set deleteNo=1
    where attributeGatherChildId = #{groupid,jdbcType=INTEGER}
    ;
    delete from classesgroup
    where groupId= #{groupid,jdbcType=INTEGER}
    ;
     UPDATE staff
     SET groupId =22
     where  groupId=#{groupid,jdbcType=INTEGER}
     ;
    delete from staffclassesrecord 
    where workDate>=DATE(NOW()) and  groupId=#{groupid,jdbcType=INTEGER};
  </delete>
  
   
  
</mapper>